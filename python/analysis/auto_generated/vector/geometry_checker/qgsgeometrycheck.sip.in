/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/analysis/vector/geometry_checker/qgsgeometrycheck.h              *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.pl again   *
 ************************************************************************/






class QgsGeometryCheck
{
%Docstring
*************************************************************************
qgsgeometrycheck.h
---------------------
begin                : September 2014
copyright            : (C) 2014 by Sandro Mani / Sourcepole AG
email                : smani at sourcepole dot ch
**************************************************************************

This program is free software; you can redistribute it and/or modify  *
it under the terms of the GNU General Public License as published by  *
the Free Software Foundation; either version 2 of the License, or     *
(at your option) any later version.                                   *

**************************************************************************
%End

%TypeHeaderCode
#include "qgsgeometrycheck.h"
%End
  public:
    static const QMetaObject staticMetaObject;

  public:

    struct LayerFeatureIds
    {
      LayerFeatureIds();


    };

    enum ChangeWhat
    {
      ChangeFeature,
      ChangePart,
      ChangeRing,
      ChangeNode
    };

    enum ChangeType
    {
      ChangeAdded,
      ChangeRemoved,
      ChangeChanged
    };

    enum CheckType
    {
      FeatureNodeCheck,
      FeatureCheck,
      LayerCheck
    };

    enum Flag
    {
      SingleGeometryCheck,
      SingleLayerTopologyCheck,
      AvailableInValidation
    };
    typedef QFlags<QgsGeometryCheck::Flag> Flags;


    struct Change
    {
      Change();
      Change( ChangeWhat _what, ChangeType _type, QgsVertexId _vidx = QgsVertexId() );
      ChangeWhat what;
      ChangeType type;
      QgsVertexId vidx;
      bool operator==( const Change &other );
    };

    typedef QMap<QString, QMap<QgsFeatureId, QList<Change> > > Changes;

    QgsGeometryCheck( CheckType checkType,
                      const QgsGeometryCheckContext *context,
                      const QVariantMap &configuration );
    virtual ~QgsGeometryCheck();


    virtual bool isCompatible( QgsVectorLayer *layer ) const;
    virtual QList<QgsWkbTypes::GeometryType> compatibleGeometryTypes() const = 0;
    virtual QgsGeometryCheck::Flags flags() const;

    virtual void collectErrors( const QMap<QString, QgsFeaturePool *> &featurePools, QList<QgsGeometryCheckError *> &errors, QStringList &messages, QgsFeedback *feedback = 0, const LayerFeatureIds &ids = QgsGeometryCheck::LayerFeatureIds() ) const = 0;
    virtual QStringList resolutionMethods() const = 0;
    virtual QString description() const = 0;
    virtual QString id() const = 0;
    CheckType checkType() const;
    const QgsGeometryCheckContext *context() const;

  protected:


};

/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/analysis/vector/geometry_checker/qgsgeometrycheck.h              *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.pl again   *
 ************************************************************************/
